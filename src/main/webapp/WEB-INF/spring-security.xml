<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http pattern="/resources/stylesheets/**" security="none"/>
	<http pattern="/login*" security="none"/>
	<http pattern="/register*" security="none"/>

    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/booking" access="hasRole('ROLE_USER')" />

		<form-login
		    login-page="/login"
		    default-target-url="/booking"
			authentication-failure-url="/login"
			username-parameter="username"
			password-parameter="password"
			always-use-default-target='true' />
		<logout delete-cookies="JSESSIONID" logout-success-url="/"  />
		<!-- enable csrf protection -->
<!-- 		<csrf/> -->
	</http>

	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username,password, enabled from users where username=?"
		  authorities-by-username-query=
		    "select u.username, r.RoleName as role from users u, roles r where u.RoleId = r.RoleId and u.username =?  " />
	  </authentication-provider>
	</authentication-manager>

</beans:beans>